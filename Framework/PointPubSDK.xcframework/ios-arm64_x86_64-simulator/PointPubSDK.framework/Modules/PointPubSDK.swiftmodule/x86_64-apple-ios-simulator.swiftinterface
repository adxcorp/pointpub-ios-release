// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target x86_64-apple-ios13-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PointPubSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AdSupport
import AppTrackingTransparency
import Combine
import CoreTelephony
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import SystemConfiguration
import UIKit.UIActivityIndicatorView
import UIKit.UIApplication
import UIKit.UIFont
import UIKit.UIImage
import UIKit.UIImageView
import UIKit
import UIKit.UITextField
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
@frozen public enum VirtualPointResult {
  case success(Swift.String, Swift.Int)
  case fail(Swift.String, Swift.Int)
}
@objc public protocol PointPubDelegate {
  @objc optional func onOpenOfferwall()
  @objc optional func onCloseOfferwall()
}
@_inheritsConvenienceInitializers @objc final public class PointPub : ObjectiveC.NSObject {
  @objc weak public static var delegate: (any PointPubSDK.PointPubDelegate)?
  @objc public static func setAppId(with appId: Swift.String)
  @objc public static func setUserId(with userId: Swift.String)
  @objc public static func startOfferwall(from viewController: UIKit.UIViewController)
  @objc public static func getCompletedCampaign(_ completion: @escaping (Foundation.NSString?, Foundation.NSError?) -> Swift.Void)
  public static func getCompletedCampaign() async throws -> Swift.String
  @objc public static func getVirtualPoint(_ completion: @escaping (Foundation.NSString?, Foundation.NSNumber?, Foundation.NSError?) -> Swift.Void)
  public static func getVirtualPoint() async throws -> (pointName: Swift.String, point: Swift.Int)
  @objc public static func spendVirtualPoint(point: Foundation.NSNumber, _ completion: @escaping (Foundation.NSString?, Foundation.NSNumber?, Foundation.NSError?) -> Swift.Void)
  public static func spendVirtualPoint(point: Swift.Int) async throws -> (pointName: Swift.String, point: Swift.Int)
  @objc public static func isTrackingEnabled() -> Swift.Bool
  @objc public static func requestTrackingPermission(_ completion: @escaping (Swift.Bool) -> Swift.Void)
  @objc public static func enableLogTrace()
  @objc public static func isLogTrace() -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
extension PointPubSDK.VirtualPointResult : Swift.Sendable {}
